{
  "posts": [
    {
      "id": 1,
      "slug": "building-a-todo-app-with-react-hooks",
      "title": "Building a Todo App with React Hooks",
      "overview": "A step-by-step guide to creating a functional todo app using React functional components and Hooks (useState, useEffect).",
      "content": "<h2>Introduction</h2><p>React Hooks let you use state and other React features without writing a class. In this tutorial, we'll build a simple Todo app using <strong>useState</strong> and <strong>useEffect</strong>.</p><h3>Project Setup</h3><p>To get started, create a new React app:</p><pre><code>npx create-react-app todo-app</code></pre><p>Then navigate into the project directory:</p><pre><code>cd todo-app</code></pre><p>Start the development server:</p><pre><code>npm start</code></pre><h3>Creating the Todo Component</h3><p>Create a new file called <code>TodoApp.jsx</code> in the <strong>src</strong> folder of your project. This file will contain the main logic of your app.</p><p>Inside <code>TodoApp.jsx</code>, define the following component:</p><pre><code>import React, { useState } from 'react';\n\nconst TodoApp = () => {\n  const [todos, setTodos] = useState([]);  // State to hold the todo list\n  const [input, setInput] = useState('');  // State for the new todo input\n\n  const addTodo = () => {\n    if (input.trim() === '') return;  // Prevent adding empty todos\n    setTodos([...todos, input]);  // Add the new todo to the list\n    setInput('');  // Reset the input field after adding the todo\n  };\n\n  const removeTodo = (index) => {\n    const newTodos = todos.filter((_, i) => i !== index);  // Remove todo by index\n    setTodos(newTodos);  // Update the todo list\n  };\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}  // Update input state\n        placeholder=\"Add new todo\"\n      />\n      <button onClick={addTodo}>Add</button>\n\n      <ul>\n        {todos.map((todo, index) => (\n          <li key={index}>\n            {todo}\n            <button onClick={() => removeTodo(index)}>❌</button>  // Button to remove a todo\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoApp;</code></pre><h3>Adding Styles</h3><p>In order to make our app look good, let's add some basic styles. Create a file called <code>TodoApp.css</code> in the <strong>src</strong> folder and add the following CSS:</p><pre><code>/* TodoApp.css */\n.todo-container {\n  width: 100%;\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 1rem;\n  border-radius: 8px;\n  background-color: #f7f7f7;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\ninput {\n  padding: 0.5rem;\n  margin-right: 0.5rem;\n  font-size: 1rem;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  width: 70%;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  background-color: #4CAF50;\n  color: white;\n  font-size: 1rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n  margin-top: 1rem;\n}\n\nli {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem 0;\n  border-bottom: 1px solid #ddd;\n}\n\nli button {\n  background-color: #f44336;\n}\n\nli button:hover {\n  background-color: #e53935;\n}</code></pre><h3>Testing the App</h3><p>Once you've set everything up, you should be able to see your Todo app in action. Open your browser and navigate to <code>http://localhost:3000</code>. You should be able to:</p><ul><li>Add a new todo by typing in the input field and clicking the 'Add' button.</li><li>Remove a todo by clicking the ❌ button next to it.</li></ul><h3>Conclusion</h3><p>Congratulations! You've built a functional Todo app using React Hooks. You've learned how to manage state with <strong>useState</strong> and handle side effects with <strong>useEffect</strong>. With this knowledge, you can now start building more complex applications in React.</p><p>Feel free to explore more about React, and make sure to check out the official React documentation for more advanced topics!</p>",
      "code": "import React, { useState } from 'react';\n\nconst TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  const addTodo = () => {\n    if (input.trim() === '') return;\n    setTodos([...todos, input]);\n    setInput('');\n  };\n\n  const removeTodo = (index) => {\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Add new todo\"\n      />\n      <button onClick={addTodo}>Add</button>\n\n      <ul>\n        {todos.map((todo, index) => (\n          <li key={index}>\n            {todo}\n            <button onClick={() => removeTodo(index)}>❌</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoApp;",
      "language": "javascript",
      "image": "https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8cmVhY3R8ZW58MHx8MHx8fDA%3D",
      "author": "Ashir",
      "date": "2025-04-26",
      "updatedAt": "2025-04-27"
    }
  ]
}